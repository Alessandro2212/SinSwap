@model VendorListModel

@using Nop.Core.Domain.Common
@using Nop.Core.Domain.Seo
@using Nop.Web.Framework.Infrastructure
@using System.Text.RegularExpressions;
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@inject CommonSettings commonSettings
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts("Best Sellers");
    //meta
    //Html.AddMetaDescriptionParts(Model.MetaDescription);
    //Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("vendorList");
}

<header>
    <div class="container-fluid">

        <div class="row">
            <div class="col-12 col-md-4 logoContainer">
                <h1>sinswap</h1>
                <a href="@Url.RouteUrl("HomePage")">
                    <img class="logo" title="Sinning is Winning" alt="Sinswap" src="/Themes/Sinswap/content/images/logoVendor.svg">
                </a>
            </div>

            @await Component.InvokeAsync("Header")

        </div>

        <div class="row">
            <div class="col-12 payoffContainer">
                @if (Model.VendorType == Nop.Web.Enums.VendorTypeEnum.BestReviewed) {
                    <div class="payoff">Our top sellers</div>
                }
                @if (Model.VendorType == Nop.Web.Enums.VendorTypeEnum.MostPopular) {
                    <div class="payoff">Our most popular sellers</div>
                }
            </div>
        </div>

    </div>
</header>

<div class="page category-page">
    <div class="page-body">

        <div class="container firstContainer sellersContainer">
            <div class="row pb-5">
                @foreach (var vendor in Model.MiniVendors)
                {
                    <div class="col-3">
                        <div class="topSellerCard">
                            <a href="@Url.RouteUrl("Vendor", new { SeName = vendor.SeName })" class="miniVendorImg" style="background-image: url('@Url.Content(vendor.PictureUrl)');"></a>
                            <div class="location">
                                <span class="city">@vendor.City</span>, <span class="country">@vendor.Country</span>
                            </div>
                            <div class="nameAge">
                                <a href="@Url.RouteUrl("Vendor", new { SeName = vendor.SeName })"><span class="name">@vendor.Name</span>, <span class="age">@vendor.Age</span></a>
                            </div>
                        </div>
                    </div>
                }
            </div>

            @{
                var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
            }

            @if (!pager.IsEmpty())
            {
                <div class="pager">
                    @pager
                </div>
            }
        </div>
    </div>
</div>
