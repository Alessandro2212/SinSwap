@model RegisterModel
@using System.Text.Encodings.Web
@using System.Net
@using Nop.Core
@inject IWebHelper webHelper

@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
    //page class
    Html.AppendPageCssClassParts("html-registration-page");
    Html.AppendPageCssClassParts("vendorRegistrationPage");

    //login URL with return URL (if specified)
    var loginUrl = Url.RouteUrl("Login", null, webHelper.CurrentRequestProtocol);
    if (!string.IsNullOrEmpty(this.Context.Request.Query["returnUrl"]))
    {
        loginUrl = webHelper.ModifyQueryString(loginUrl, "returnurl", this.Context.Request.Query["returnUrl"]);
    }
}

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit" async defer></script>
<script>
    var onloadCallback = function () {
        grecaptcha.render('divcaptch', {
            'sitekey': '6Lch1kMjAAAAAFYLkTWmVleazq1h25E2WWkmmdrf',
            'callback': function (response) {
                $('#txtcaptcha').val('t');
            }
        })
    }
</script>

<header class="vendorRegistration">
    <div class="container-fluid vendorRegistrationFormContainer">

        <div class="row">
            <div class="col-12 col-md-4 logoContainer">
                <h1>sinswap</h1>
                <a href="@Url.RouteUrl("HomePage")">
                    <img class="logo" title="Sinning is Winning" alt="Sinswap" src="/Themes/Sinswap/content/images/logoHome.svg">
                </a>
            </div>

            @await Component.InvokeAsync("Header")

        </div>

        @using (Html.BeginForm("register", "customer", FormMethod.Post, new { @class = "vendorRegistrationForm" }))
        {
            @*<form method="post" action="#">*@

            <div class="swiper">
                <div class="swiper-wrapper">

                    @* Step 1 *@
                    <div class="swiper-slide">

                        <div class="row justify-content-center">
                            <div class="col-12 col-md-8">

                                <div class="page-title">
                                    <div class="title">Welcome and thank you for joining!</div>

                                    <div class="subtitle">We want to create your account, so we need some basic info.</div>
                                </div>

                                <p>
                                    First things first, privacy and security are really important to us and they should be to you too,
                                    so please create a strong password so we know it's really you.
                                </p>

                            </div>
                        </div>

                        <div class="row fieldsetStepContainer justify-content-center">
                            <div class="col-12 col-md-3">

                                <div class="fieldset">
                                    <div class="form-fields">
                                        <div class="form-group">
                                            @*<input class="form-control" placeholder="Password" type="password" data-val="true" data-val-required="Password is required." id="Password" name="Password" value="">
                                        <span class="field-validation-valid" data-valmsg-for="Password" data-valmsg-replace="true"></span>*@
                                            @Html.TextBoxFor(model => model.Password, new {@class = "form-control firstField", placeholder="Password", type="password"})
                                            @*@Html.ValidationMessageFor(model => model.Password)*@
                                        </div>
                                        <div class="form-group">
                                            @*<input class="form-control" placeholder="Re-type password" type="password" data-val="true" data-val-required="Password is required." id="Password2" name="Password2" value="">
                                        <span class="field-validation-valid" data-valmsg-for="Password2" data-valmsg-replace="true"></span>*@
                                            @Html.TextBoxFor(model => model.ConfirmPassword, new {@class = "form-control", placeholder="Re-type password", type="password"})
                                            @*@Html.ValidationMessageFor(model => model.ConfirmPassword)*@
                                        </div>
                                    </div>
                                </div>

                                <div class="buttons">
                                    <input type="button" class="btn btn-action register-next-step-button swipe-next" value="Continue" name="continue-button">
                                </div>

                            </div>
                        </div>

                    </div>
                    @* /Step 1 *@

                    @* Step 2 *@
                    <div class="swiper-slide">

                        <div class="row justify-content-center">
                            <div class="col-12 col-md-8">

                                <div class="page-title">
                                    <div class="title">Come as you are, respected as you are</div>

                                    <div class="subtitle">How do you identify?</div>
                                </div>

                            </div>
                        </div>

                        <div class="row fieldsetStepContainer justify-content-center">
                            <div class="col-12 col-md-3">

                                <div class="fieldset">
                                    <div class="form-fields">
                                        <div class="form-check">
                                            <div class="customError"></div>
                                            @*<input class="form-check-input" type="radio" name="genderidentity" id="female" value="female">*@
                                            @Html.RadioButtonFor(model => model.Gender, "Female", new {@class = "form-check-input ignore", @tabindex = "-1", @id = "female", @checked = "" })
                                            <label class="form-check-label" for="female">
                                                Female
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            @* <input class="form-check-input" type="radio" name="genderidentity" id="male" value="male">*@
                                            @Html.RadioButtonFor(model => model.Gender, "Male", new {@class = "form-check-input ignore", @tabindex = "-1", @id = "male"})
                                            <label class="form-check-label" for="male">
                                                Male
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            @* <input class="form-check-input" type="radio" name="genderidentity" id="nonbinary" value="nonbinary">*@
                                            @Html.RadioButtonFor(model => model.Gender, "Non-binary", new {@class = "form-check-input ignore", @tabindex = "-1", @id = "nonbinary"})
                                            <label class="form-check-label" for="nonbinary">
                                                Non-binary
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            @*<input class="form-check-input" type="radio" name="genderidentity" id="furry" value="furry">*@
                                            @Html.RadioButtonFor(model => model.Gender, "Furry", new {@class = "form-check-input ignore", @tabindex = "-1", @id = "furry"})
                                            <label class="form-check-label" for="furry">
                                                Furry
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            @*<input class="form-check-input" type="radio" name="genderidentity" id="unknown" value="unknown">*@
                                            @Html.RadioButtonFor(model => model.Gender, "None of your business", new {@class = "form-check-input ignore", @tabindex = "-1", @id = "unknown"})
                                            <label class="form-check-label" for="unknown">
                                                None of your business
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="buttons">
                                    <input type="button" class="btn btn-action register-next-step-button swipe-next" value="Continue" name="continue-button" tabindex="-1">
                                </div>

                            </div>
                        </div>

                    </div>
                    @* /Step 2 *@

                    @* Step 3 *@
                    <div class="swiper-slide">

                        <div class="row justify-content-center">
                            <div class="col-12 col-md-8">

                                <div class="page-title">
                                    <div class="title">Let's get to know each other a little better</div>

                                    <div class="subtitle">What should we call you?</div>
                                </div>

                            </div>
                        </div>

                        <div class="row fieldsetStepContainer justify-content-center">
                            <div class="col-12 col-md-3">

                                <div class="fieldset">
                                    <div class="form-fields">
                                        <div class="form-group">
                                            @*<input class="form-control" placeholder="Your first name" type="text" data-val="true" data-val-required="Your first name is required." id="firstname" name="firstname" value="">
                                        <span class="field-validation-valid" data-valmsg-for="firstname" data-valmsg-replace="true"></span>*@
                                            @Html.TextBoxFor(model => model.FirstName, new {@class = "form-control ignore firstField", @tabindex = "-1", placeholder="Your first name", type="text"})
                                            @*@Html.ValidationMessageFor(model => model.FirstName)*@
                                        </div>
                                        <div class="form-group">
                                            @* <input class="form-control" placeholder="Your last name" type="text" data-val="true" data-val-required="Your last name is required." id="lastname" name="lastname" value="">
                                        <span class="field-validation-valid" data-valmsg-for="lastname" data-valmsg-replace="true"></span>*@
                                            @Html.TextBoxFor(model => model.LastName, new {@class = "form-control ignore", @tabindex = "-1", placeholder="Your last name", type="text"})
                                            @*@Html.ValidationMessageFor(model => model.LastName)*@
                                        </div>
                                    </div>
                                </div>

                                <div class="fieldset">
                                    <div class="form-fields">
                                        <div class="form-group">
                                            <label>Date of birth</label>
                                            <div class="container-fluid">
                                                <div class="row">
                                                    <div class="col-4 px-1">
                                                        @Html.DropDownListFor(m => m.DateOfBirthDay, Enumerable.Range(1, 31).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new {@class = "form-control ignore", @tabindex = "-1"})
                                                        @*@Html.ValidationMessageFor(model => model.DateOfBirthDay)*@
                                                    </div>
                                                    <div class="col-4 px-1">
                                                        @Html.DropDownListFor(m => m.DateOfBirthMonth, Enumerable.Range(1, 12).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new {@class = "form-control ignore", @tabindex = "-1"})
                                                        @*@Html.ValidationMessageFor(model => model.DateOfBirthMonth)*@
                                                    </div>
                                                    <div class="col-4 px-1">
                                                        @Html.DropDownListFor(m => m.DateOfBirthYear, Enumerable.Range(1900, 105).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new {@class = "form-control ignore", @tabindex = "-1"})
                                                        @*@Html.ValidationMessageFor(model => model.DateOfBirthYear)*@
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

@*                                @if (Model.IsVendor)
                                {
                                    <div class="fieldset">
                                        <div class="form-fields">
                                            <div class="form-check">
                                                @Html.RadioButtonFor(model => model.IsPremiumVendor, true, new {@class = "form-check-input ignore"})
                                                <label class="form-check-label" for="furry">
                                                    Premium
                                                </label>
                                            </div>
                                            <div class="form-check">
                                                @Html.RadioButtonFor(model => model.IsPremiumVendor, false, new {@class = "form-check-input ignore"})
                                                <label class="form-check-label" for="unknown">
                                                    Regular
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                }
*@
                                <div class="footnote">
                                    This info will NEVER be posted anywhere,
                                    but for legal reasons we need to know your
                                    real name and age. We hope you understand.
                                </div>

                                <div class="buttons">
                                    <input type="button" class="btn btn-action register-next-step-button swipe-next" value="Continue" name="continue-button" tabindex="-1">
                                </div>
                            </div>
                        </div>

                    </div>
                    @* /Step 3 *@

@*                    @if (Model.IsVendor)
                    {
*@                      @* Step 4 *@
                        <div class="swiper-slide">

                            <div class="row justify-content-center">
                                <div class="col-12 col-md-8">

                                    <div class="page-title">
                                        <div class="title">What will be the name of your Sinswap store?</div>

                                        <div class="subtitle">Originality really pays off</div>
                                    </div>

                                </div>
                            </div>

                            <div class="row fieldsetStepContainer justify-content-center">
                                <div class="col-12 col-md-3">

                                    <div class="fieldset">
                                        <div class="form-fields">
                                            <div class="form-group">
                                                @*<input class="form-control" placeholder="sinswap.com/" type="text" data-val="true" data-val-required="This name is required." id="shopname" name="shopname" value="sinswap.com/">
                                                <span class="field-validation-valid" data-valmsg-for="shopname" data-valmsg-replace="true"></span>*@
                                            @Html.TextBoxFor(model => model.ShopName, new {@class = "form-control ignore firstField", placeholder="sinswap.com/", @tabindex = "-1", type="text"})
                                                @*@Html.ValidationMessageFor(model => model.ShopName)*@
                                            </div>
                                        </div>
                                    </div>

                                    <div class="buttons">
                                        <input type="button" class="btn btn-action register-next-step-button swipe-next" value="Continue" name="continue-button" tabindex="-1">
                                    </div>

                                </div>
                            </div>

                        </div>
                        @* /Step 4 *@
  @*                  }
                    else
                    {
                        Model.ShopName = "buyer";
                        @Html.HiddenFor(m => m.ShopName )
                    }
*@
                    @* Step 5 *@
                    <div class="swiper-slide">

                        <div class="row justify-content-center">
                            <div class="col-12 col-md-8">

                                <div class="page-title">
                                    <div class="title">Where do you live?</div>

                                    <div class="subtitle">We will never share this with any buyers or other sellers</div>
                                </div>

                            </div>
                        </div>

                        <div class="row fieldsetStepContainer justify-content-center">
                            <div class="col-12 col-md-3">

                                <div class="fieldset">
                                    <div class="form-fields">
                                        <div class="form-group">
                                            @*<input class="form-control" placeholder="Street address" type="text" data-val="true" data-val-required="Your address is required." id="streetaddress" name="streetaddress">
                                        <span class="field-validation-valid" data-valmsg-for="streetaddress" data-valmsg-replace="true"></span>*@
                                            @Html.TextBoxFor(model => model.StreetAddress, new {@class = "form-control ignore firstField", @tabindex = "-1", placeholder="Street address", type="text"})
                                            @*@Html.ValidationMessageFor(model => model.StreetAddress)*@
                                        </div>
                                        <div class="row p-0">
                                            <div class="col-5">
                                                <div class="form-group">
                                                    @*<input class="form-control" placeholder="Zipcode" type="text" data-val="true" data-val-required="Your zipcode is required." id="zipcode" name="zipcode">
                                                <span class="field-validation-valid" data-valmsg-for="zipcode" data-valmsg-replace="true"></span>*@
                                                    @Html.TextBoxFor(model => model.ZipPostalCode, new {@class = "form-control ignore", @tabindex = "-1", placeholder="Zipcode", type="text"})
                                                    @*@Html.ValidationMessageFor(model => model.ZipPostalCode)*@
                                                </div>
                                            </div>
                                            <div class="col-7 pl-0">
                                                <div class="form-group">
                                                    @*<input class="form-control" placeholder="City" type="text" data-val="true" data-val-required="Your city is required." id="city" name="city">
                                                <span class="field-validation-valid" data-valmsg-for="city" data-valmsg-replace="true"></span>*@
                                                    @Html.TextBoxFor(model => model.City, new {@class = "form-control ignore", @tabindex = "-1", placeholder="City", type="text"})
                                                    @*@Html.ValidationMessageFor(model => model.City)*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @*<input class="form-control" placeholder="Country" type="text" data-val="true" data-val-required="Your country is required." id="country" name="country">
                                        <span class="field-validation-valid" data-valmsg-for="country" data-valmsg-replace="true"></span>*@
                                            @Html.TextBoxFor(model => model.County, new {@class = "form-control ignore", @tabindex = "-1", placeholder="Country", type="text"})
                                            @*@Html.ValidationMessageFor(model => model.County)*@
                                        </div>
                                    </div>
                                </div>

                                <div class="buttons">
                                    <input type="button" class="btn btn-action register-next-step-button swipe-next" value="Continue" name="continue-button" tabindex="-1">
                                </div>

                            </div>
                        </div>

                    </div>
                    @* /Step 5 *@

                    @* Step 6 *@
                    <div class="swiper-slide">

                        <div class="row justify-content-center">
                            <div class="col-12 col-md-8">

                                <div class="page-title">
                                    <div class="title">We're building a community here</div>

                                    <div class="subtitle">
                                        You succeed, we succeed!<br />
                                        So we would really like to help you out with like tips, updates, offers and more. Spam? Never!
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="row fieldsetStepContainer justify-content-center">
                            <div class="col-12 col-md-4">

                                <div class="fieldset">
                                    <div class="form-fields">
                                        <div class="form-check">
                                            @*<input class="form-check-input" type="radio" name="optin" id="optin" value="optin">*@
                                            @Html.RadioButtonFor(model => model.EnteringEmailTwice, true, new {@class = "form-check-input ignore", @tabindex = "-1"})
                                            <label class="form-check-label" for="EnteringEmailTwice">
                                                You can e-mail me occasionally
                                            </label>
                                        </div>
                                        <div class="form-check">
                                            @*<input class="form-check-input" type="radio" name="optin" id="optout" value="optout">*@
                                            @Html.RadioButtonFor(model => model.EnteringEmailTwice, false, new {@class = "form-check-input ignore", @tabindex = "-1"})
                                            <label class="form-check-label" for="optout">
                                                No thanks
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="buttons">
                                    <input type="button" class="btn btn-action register-next-step-button swipe-next" value="Continue" name="continue-button" tabindex="-1">
                                </div>

                            </div>
                        </div>

                    </div>
                    @* /Step 6 *@

                    @* Step 7 *@
                    <div class="swiper-slide">

                        <div class="row justify-content-center">
                            <div class="col-12 col-md-8">

                                <div class="page-title">
                                    <div class="title">Our least favourite part</div>

                                    <div class="subtitle">The legal stuff...</div>
                                </div>

                            </div>
                        </div>

                        <div class="row fieldsetStepContainer justify-content-center">
                            <div class="col-12 col-md-3">

                                <div class="fieldset">
                                    <div class="form-fields">
                                        <div class="form-check">
                                            @*<input class="form-check-input" type="checkbox" name="terms" id="terms" value="terms">*@
                                            @Html.CheckBoxFor(model => model.AcceptPrivacyPolicyEnabled, new {@class = "form-check-input ignore", @tabindex = "-1"})
                                            <label class="form-check-label" for="AcceptPrivacyPolicyEnabled">
                                                I trust you guys
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <div class="footnote">
                                    By accepting our <a href="#" tabindex="-1">Terms of Service</a>, <a href="#" tabindex="-1">Privacy Policy</a> and
                                    <a href="#" tabindex="-1">GDPR consent</a> and continue our service. You agree with terms and policies.
                                </div>

                                <div id="divcaptch" style="display: none;"></div>
                                <input id="txtcaptcha" class="ignore" type="text" style="display:none" required data-val-required="Sorry R2-D2, no market for robot panties..."  />

                                <div class="buttons">
                                    <input type="submit" class="btn btn-action done register-next-step-button" value="Create my Sinswap-account" tabindex="-1" />
                                    @*<input type="button" class="btn btn-action done register-next-step-button" value="Create my Sinswap-account" name="continue-button">*@
                                </div>

                            </div>
                        </div>

                    </div>
                    @* /Step 7 *@

                </div>

                <div class="row stepIconContainer">
                    <div class="col-12 justify-content-center d-flex">

                        <ul>
                            <li class="icon0 active">
                                <img src="/Themes/Sinswap/content/images/icons/registerPassword.svg" /><br />
                                Safety first
                            </li>
                            <li class="icon1">
                                <img src="/Themes/Sinswap/content/images/icons/registerGender.svg" /><br />
                                Identify as
                            </li>
                            <li class="icon2">
                                <img src="/Themes/Sinswap/content/images/icons/registerName.svg" /><br />
                                Who?
                            </li>
                            <li class="icon3">
                                <img src="/Themes/Sinswap/content/images/icons/registerShop.svg" /><br />
                                Your shop
                            </li>
                            <li class="icon4">
                                <img src="/Themes/Sinswap/content/images/icons/registerLocation.svg" /><br />
                                You're from
                            </li>
                            <li class="icon5">
                                <img src="/Themes/Sinswap/content/images/icons/registerCommunity.svg" /><br />
                                Community
                            </li>
                            <li class="icon6">
                                <img src="/Themes/Sinswap/content/images/icons/registerReady.svg" /><br />
                                Done!
                            </li>
                        </ul>

                    </div>
                </div>

            </div>
            @Html.HiddenFor(m => m.Email)
            @Html.HiddenFor(m => m.ConfirmEmail)
            @Html.HiddenFor(m => m.IsVendor)
            @*</form>*@
        }


    </div>
</header>

<script src="https://cdn.jsdelivr.net/npm/swiper@8.4.4/swiper-bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8.4.4/swiper-bundle.min.css">

@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script asp-location="Footer">
        $(document).ready(function () {
            $("#@Html.IdFor(model => model.CountryId)").on('change', function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });
    </script>
}


<div class="modal fade registerModal" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="registerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <div class="modal-title w-100">
                    <h5 id="registerModalLabel">Join Sinswap</h5>
                </div>

                @await Html.PartialAsync("_ExternalAuthentication.Errors")

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <form asp-route="Register" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="btn-container">
                                <label class="switch btn-color-mode-switch">
                                    <input type="checkbox" name="color_mode" id="color_mode" value="1">
                                    <label for="color_mode" data-on="Seller" data-off="Buyer" class="btn-color-mode-switch-inner"></label>
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="form-group">
                                @*<label asp-for="Email" asp-postfix=":"></label>*@
                                <input asp-for="Email" class="form-control" placeholder="Your email" />
                                @*<nop-required />*@
                                <span asp-validation-for="Email"></span>
                            </div>
                        </div>
                    </div>

                    <div class="buttons">
                        <input type="submit" id="register-button" class="btn btn-action register-next-step-button" value="Join" name="register-button" />
                    </div>
                </form>

                <div class="text footnote">
                    By clicking Join or Join with Google, Facebook or Apple, you agree to Sinswap's Terms
                    of Use and Privacy Policy. Sinswap may send you communications; you can change your
                    preferences in your account settings. We'll never post without your permission.
                </div>

                <!-- Start: Comment if no social singup -->
                <div class="devider">
                    <span>or</span>
                </div>

                <a href="#" class="btn btn-light btn-facebook">Join with Facebook</a>
                <a href="#" class="btn btn-light btn-google">Join with Google</a>
                <a href="#" class="btn btn-light btn-apple">Join with Apple</a>
                <!-- End: Comment if no social signup -->

                <div class="external-authentication">
                    @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
                </div>
            </div>

            <div class="modal-footer">
                <div class="new-wrapper register-block">
                    @*<div class="title">
                    <strong>@T("Account.Login.NewCustomer")</strong>
                    </div>*@
                    <div class="text">
                        Already a member? <a href="@loginUrl" class="btn-text">Sign in@*@T("Account.Register")*@</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>