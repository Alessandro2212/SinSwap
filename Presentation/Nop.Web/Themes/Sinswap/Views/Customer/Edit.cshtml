@model CustomerModel

@{
    //page title
    //ViewBag.Title = T("Admin.Customers.Customers.EditCustomerDetails").Text;
    ////active menu item (system name)
    //Html.SetActiveMenuItemSystemName("Customers list");
    Layout = "_ColumnsTwo";
}

@*<form asp-controller="Customer" asp-action="Edit" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Customers.Customers.EditCustomerDetails") - @Model.LastName @Model.FirstName
            <small>
                <i class="fa fa-arrow-circle-left"></i>
                <a asp-action="List">@T("Admin.Customers.Customers.BackToList")</a>
            </small>
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
            <button type="submit" name="save-continue" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.SaveContinue")
            </button>
            <button type="button" class="btn bg-green" data-toggle="modal" data-target="#sendemail-window">
                <i class="fa fa-at"></i>
                @T("Admin.Customers.Customers.SendEmail")
            </button>
            <button type="button" class="btn bg-green" data-toggle="modal" data-target="#sendprivatemessage-window">
                <i class="fa fa-envelope-o"></i>
                @T("Admin.Customers.Customers.SendPM")
            </button>
            @if (Model.AllowSendingOfWelcomeMessage)
            {
                <button type="submit" id="send-welcome-message" name="send-welcome-message" class="btn bg-green">
                    <i class="fa fa-smile-o"></i>
                    @T("Admin.Customers.Customers.SendWelcomeMessage")
                </button>
                <nop-action-confirmation asp-button-id="send-welcome-message" />
            }
            @if (Model.AllowReSendingOfActivationMessage)
            {
                <button type="submit" id="resend-activation-message" name="resend-activation-message" class="btn bg-green">
                    <i class="fa fa-check-circle"></i>
                    @T("Admin.Customers.Customers.ReSendActivationMessage")
                </button>
                <nop-action-confirmation asp-button-id="resend-activation-message" />
            }
            @if (Model.GdprEnabled)
            {

                <div class="btn-group">
                    <button type="button" class="btn btn-success">
                        <i class="fa fa-download"></i>
                        @T("Admin.Customers.Customers.Gdpr")
                    </button>
                    <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                        <span class="caret"></span>
                        <span class="sr-only">&nbsp;</span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <a asp-action="GdprExport" asp-route-id="@Model.Id" >
                                <i class="fa fa-file-code-o"></i>
                                @T("Admin.Customers.Customers.Gdpr.Export")
                            </a>
                        </li>
                        <li>
                            <a id="customer-gdpr-delete" href="#">
                                <i class="fa fa-trash-o"></i>
                                @T("Admin.Customers.Customers.Gdpr.Delete")
                            </a>
                        </li>
                    </ul>
                </div>
            }
            <span id="customer-delete" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Admin.Common.Delete")
            </span>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CustomerDetailsButtons, additionalData = Model })
        </div>
    </div>
    @await Html.PartialAsync("_CreateOrUpdate", Model)
</form>
*@
<header class="vendorAdmin">
    <div class="container-fluid">
        <div class="row">
            <div class="col-8 col-md-4 logoContainer">
                <h1>sinswap</h1>
                @await Component.InvokeAsync("Logo")
            </div>
            <div class="d-none d-md-flex col-6 col-md-4 titleContainer align-items-center justify-content-center">
                <h2>Shop</h2>
            </div>
            <div class="col-4 col-md-4 d-lg-none d-flex align-items-center justify-content-end">
                <div class="dropdown">
                    <button class="btn dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" data-display="static" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-bars"></i>
                    </button>
                    <div class="dropdown-menu dropdown-menu--animate" aria-labelledby="dropdownMenuButton">
                        <a class="dropdown-item" href="#v-pills-messages"><i class="fas fa-envelope d-none d-xl-inline"></i> Messages</a>
                        <a class="dropdown-item" href="#v-pills-settings"><i class="fas fa-cog d-none d-xl-inline"></i> Settings</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>
@using (Html.BeginForm("edit", "customer", FormMethod.Post))
{
    <div class="vendorAdminBody">
        @await Html.PartialAsync("_CreateOrUpdate", Model)
    </div>
}
@* @using (Html.BeginForm("edit", "customer", FormMethod.Post))
{
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Customers.Customers.EditCustomerDetails") - @Model.LastName @Model.FirstName
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
        </div>
    </div>
    @await Html.PartialAsync("_CreateOrUpdate", Model)
} *@
@*<nop-delete-confirmation asp-model-id="@Model.Id" asp-button-id="customer-delete" />
@if (Model.GdprEnabled)
{
    <nop-delete-confirmation asp-model-id="@Model.Id" asp-action="GdprDelete" asp-button-id="customer-gdpr-delete" />
}*@